-- Migration: Create categories table
-- Description: User expense categories with colors and default budgets
-- Dependencies: Requires Supabase Auth (auth.uid())

-- Create categories table
CREATE TABLE IF NOT EXISTS "public"."categories" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "user_id" "uuid" DEFAULT "auth"."uid"() NOT NULL,
    "name" "text" DEFAULT ''::"text" NOT NULL,
    "default_budget" numeric DEFAULT '0'::numeric NOT NULL,
    "color" "text" DEFAULT '#3b82f6'::"text",
    "is_active" boolean DEFAULT true NOT NULL
);

-- Set table owner
ALTER TABLE "public"."categories" OWNER TO "postgres";

-- Add table comment
COMMENT ON TABLE "public"."categories" IS 'User expense categories';

-- Create auto-incrementing ID
ALTER TABLE "public"."categories" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."categories_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

-- Add primary key constraint
ALTER TABLE ONLY "public"."categories"
    ADD CONSTRAINT "categories_pkey" PRIMARY KEY ("id");

-- Enable Row Level Security
ALTER TABLE "public"."categories" ENABLE ROW LEVEL SECURITY;

-- Create RLS policies
CREATE POLICY "categories_select_policy" ON "public"."categories" 
    FOR SELECT TO "authenticated" 
    USING (("auth"."uid"() = "user_id"));

CREATE POLICY "categories_insert_policy" ON "public"."categories" 
    FOR INSERT TO "authenticated" 
    WITH CHECK (("auth"."uid"() = "user_id"));

CREATE POLICY "categories_update_policy" ON "public"."categories" 
    FOR UPDATE TO "authenticated" 
    USING (("auth"."uid"() = "user_id")) 
    WITH CHECK (("auth"."uid"() = "user_id"));

CREATE POLICY "categories_delete_policy" ON "public"."categories" 
    FOR DELETE TO "authenticated" 
    USING (("auth"."uid"() = "user_id"));

-- Grant permissions
GRANT ALL ON TABLE "public"."categories" TO "anon";
GRANT ALL ON TABLE "public"."categories" TO "authenticated";
GRANT ALL ON TABLE "public"."categories" TO "service_role";

GRANT ALL ON SEQUENCE "public"."categories_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."categories_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."categories_id_seq" TO "service_role";