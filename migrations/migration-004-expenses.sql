-- Migration: Create expenses table
-- Description: Actual expenses and transactions
-- Dependencies: Requires categories table

-- Create expenses table
CREATE TABLE IF NOT EXISTS "public"."expenses" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "user_id" "uuid" DEFAULT "auth"."uid"() NOT NULL,
    "amount" numeric NOT NULL,
    "description" "text" DEFAULT ''::"text",
    "expense_date" "date" DEFAULT "now"() NOT NULL,
    "category_id" bigint NOT NULL
);

-- Set table owner
ALTER TABLE "public"."expenses" OWNER TO "postgres";

-- Add table comment
COMMENT ON TABLE "public"."expenses" IS 'Actual expenses and transactions';

-- Create auto-incrementing ID
ALTER TABLE "public"."expenses" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."expenses_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

-- Add primary key constraint
ALTER TABLE ONLY "public"."expenses"
    ADD CONSTRAINT "expenses_pkey" PRIMARY KEY ("id");

-- Add foreign key constraint
ALTER TABLE ONLY "public"."expenses"
    ADD CONSTRAINT "expenses_category_id_fkey" 
    FOREIGN KEY ("category_id") REFERENCES "public"."categories"("id") ON DELETE CASCADE;

-- Enable Row Level Security
ALTER TABLE "public"."expenses" ENABLE ROW LEVEL SECURITY;

-- Create RLS policies
CREATE POLICY "expenses_select_policy" ON "public"."expenses" 
    FOR SELECT TO "authenticated" 
    USING (("auth"."uid"() = "user_id"));

CREATE POLICY "expenses_insert_policy" ON "public"."expenses" 
    FOR INSERT TO "authenticated" 
    WITH CHECK (("auth"."uid"() = "user_id"));

CREATE POLICY "expenses_update_policy" ON "public"."expenses" 
    FOR UPDATE TO "authenticated" 
    USING (("auth"."uid"() = "user_id")) 
    WITH CHECK (("auth"."uid"() = "user_id"));

CREATE POLICY "expenses_delete_policy" ON "public"."expenses" 
    FOR DELETE TO "authenticated" 
    USING (("auth"."uid"() = "user_id"));

-- Grant permissions
GRANT ALL ON TABLE "public"."expenses" TO "anon";
GRANT ALL ON TABLE "public"."expenses" TO "authenticated";
GRANT ALL ON TABLE "public"."expenses" TO "service_role";

GRANT ALL ON SEQUENCE "public"."expenses_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."expenses_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."expenses_id_seq" TO "service_role";